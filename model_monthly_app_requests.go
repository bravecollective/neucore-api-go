/*
Neucore API

Client library of Neucore API

API version: 1.36.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neucoreapi

import (
	"encoding/json"
)

// MonthlyAppRequests struct for MonthlyAppRequests
type MonthlyAppRequests struct {
	AppId int32 `json:"app_id"`
	AppName string `json:"app_name"`
	Requests int32 `json:"requests"`
	Year int32 `json:"year"`
	Month int32 `json:"month"`
}

// NewMonthlyAppRequests instantiates a new MonthlyAppRequests object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonthlyAppRequests(appId int32, appName string, requests int32, year int32, month int32) *MonthlyAppRequests {
	this := MonthlyAppRequests{}
	this.AppId = appId
	this.AppName = appName
	this.Requests = requests
	this.Year = year
	this.Month = month
	return &this
}

// NewMonthlyAppRequestsWithDefaults instantiates a new MonthlyAppRequests object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonthlyAppRequestsWithDefaults() *MonthlyAppRequests {
	this := MonthlyAppRequests{}
	return &this
}

// GetAppId returns the AppId field value
func (o *MonthlyAppRequests) GetAppId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *MonthlyAppRequests) GetAppIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *MonthlyAppRequests) SetAppId(v int32) {
	o.AppId = v
}

// GetAppName returns the AppName field value
func (o *MonthlyAppRequests) GetAppName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value
// and a boolean to check if the value has been set.
func (o *MonthlyAppRequests) GetAppNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppName, true
}

// SetAppName sets field value
func (o *MonthlyAppRequests) SetAppName(v string) {
	o.AppName = v
}

// GetRequests returns the Requests field value
func (o *MonthlyAppRequests) GetRequests() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value
// and a boolean to check if the value has been set.
func (o *MonthlyAppRequests) GetRequestsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Requests, true
}

// SetRequests sets field value
func (o *MonthlyAppRequests) SetRequests(v int32) {
	o.Requests = v
}

// GetYear returns the Year field value
func (o *MonthlyAppRequests) GetYear() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Year
}

// GetYearOk returns a tuple with the Year field value
// and a boolean to check if the value has been set.
func (o *MonthlyAppRequests) GetYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Year, true
}

// SetYear sets field value
func (o *MonthlyAppRequests) SetYear(v int32) {
	o.Year = v
}

// GetMonth returns the Month field value
func (o *MonthlyAppRequests) GetMonth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Month
}

// GetMonthOk returns a tuple with the Month field value
// and a boolean to check if the value has been set.
func (o *MonthlyAppRequests) GetMonthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Month, true
}

// SetMonth sets field value
func (o *MonthlyAppRequests) SetMonth(v int32) {
	o.Month = v
}

func (o MonthlyAppRequests) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["app_id"] = o.AppId
	}
	if true {
		toSerialize["app_name"] = o.AppName
	}
	if true {
		toSerialize["requests"] = o.Requests
	}
	if true {
		toSerialize["year"] = o.Year
	}
	if true {
		toSerialize["month"] = o.Month
	}
	return json.Marshal(toSerialize)
}

type NullableMonthlyAppRequests struct {
	value *MonthlyAppRequests
	isSet bool
}

func (v NullableMonthlyAppRequests) Get() *MonthlyAppRequests {
	return v.value
}

func (v *NullableMonthlyAppRequests) Set(val *MonthlyAppRequests) {
	v.value = val
	v.isSet = true
}

func (v NullableMonthlyAppRequests) IsSet() bool {
	return v.isSet
}

func (v *NullableMonthlyAppRequests) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonthlyAppRequests(val *MonthlyAppRequests) *NullableMonthlyAppRequests {
	return &NullableMonthlyAppRequests{value: val, isSet: true}
}

func (v NullableMonthlyAppRequests) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonthlyAppRequests) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


