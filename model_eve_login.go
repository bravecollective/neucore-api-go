/*
Neucore API

Client library of Neucore API

API version: 2.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neucoreapi

import (
	"encoding/json"
)

// checks if the EveLogin type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EveLogin{}

// EveLogin struct for EveLogin
type EveLogin struct {
	Id NullableInt32 `json:"id"`
	// Names starting with 'core.' are reserved for internal use.
	Name string `json:"name"`
	Description string `json:"description"`
	EsiScopes string `json:"esiScopes"`
	// Maximum length of all roles separated by comma: 1024.
	EveRoles []string `json:"eveRoles"`
}

// NewEveLogin instantiates a new EveLogin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEveLogin(id NullableInt32, name string, description string, esiScopes string, eveRoles []string) *EveLogin {
	this := EveLogin{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.EsiScopes = esiScopes
	this.EveRoles = eveRoles
	return &this
}

// NewEveLoginWithDefaults instantiates a new EveLogin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEveLoginWithDefaults() *EveLogin {
	this := EveLogin{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *EveLogin) GetId() int32 {
	if o == nil || o.Id.Get() == nil {
		var ret int32
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EveLogin) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *EveLogin) SetId(v int32) {
	o.Id.Set(&v)
}

// GetName returns the Name field value
func (o *EveLogin) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EveLogin) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EveLogin) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *EveLogin) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *EveLogin) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *EveLogin) SetDescription(v string) {
	o.Description = v
}

// GetEsiScopes returns the EsiScopes field value
func (o *EveLogin) GetEsiScopes() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EsiScopes
}

// GetEsiScopesOk returns a tuple with the EsiScopes field value
// and a boolean to check if the value has been set.
func (o *EveLogin) GetEsiScopesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EsiScopes, true
}

// SetEsiScopes sets field value
func (o *EveLogin) SetEsiScopes(v string) {
	o.EsiScopes = v
}

// GetEveRoles returns the EveRoles field value
func (o *EveLogin) GetEveRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EveRoles
}

// GetEveRolesOk returns a tuple with the EveRoles field value
// and a boolean to check if the value has been set.
func (o *EveLogin) GetEveRolesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EveRoles, true
}

// SetEveRoles sets field value
func (o *EveLogin) SetEveRoles(v []string) {
	o.EveRoles = v
}

func (o EveLogin) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EveLogin) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id.Get()
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["esiScopes"] = o.EsiScopes
	toSerialize["eveRoles"] = o.EveRoles
	return toSerialize, nil
}

type NullableEveLogin struct {
	value *EveLogin
	isSet bool
}

func (v NullableEveLogin) Get() *EveLogin {
	return v.value
}

func (v *NullableEveLogin) Set(val *EveLogin) {
	v.value = val
	v.isSet = true
}

func (v NullableEveLogin) IsSet() bool {
	return v.isSet
}

func (v *NullableEveLogin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEveLogin(val *EveLogin) *NullableEveLogin {
	return &NullableEveLogin{value: val, isSet: true}
}

func (v NullableEveLogin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEveLogin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


