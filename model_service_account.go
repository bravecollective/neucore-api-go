/*
Neucore API

Client library of Neucore API

API version: 1.26.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neucoreapi

import (
	"encoding/json"
)

// ServiceAccount struct for ServiceAccount
type ServiceAccount struct {
	ServiceId int32 `json:"serviceId"`
	ServiceName NullableString `json:"serviceName"`
	CharacterId int64 `json:"characterId"`
	Username NullableString `json:"username"`
	Status NullableString `json:"status"`
	DisplayName NullableString `json:"displayName"`
}

// NewServiceAccount instantiates a new ServiceAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAccount(serviceId int32, serviceName NullableString, characterId int64, username NullableString, status NullableString, displayName NullableString) *ServiceAccount {
	this := ServiceAccount{}
	this.ServiceId = serviceId
	this.ServiceName = serviceName
	this.CharacterId = characterId
	this.Username = username
	this.Status = status
	this.DisplayName = displayName
	return &this
}

// NewServiceAccountWithDefaults instantiates a new ServiceAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAccountWithDefaults() *ServiceAccount {
	this := ServiceAccount{}
	return &this
}

// GetServiceId returns the ServiceId field value
func (o *ServiceAccount) GetServiceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *ServiceAccount) GetServiceIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *ServiceAccount) SetServiceId(v int32) {
	o.ServiceId = v
}

// GetServiceName returns the ServiceName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ServiceAccount) GetServiceName() string {
	if o == nil || o.ServiceName.Get() == nil {
		var ret string
		return ret
	}

	return *o.ServiceName.Get()
}

// GetServiceNameOk returns a tuple with the ServiceName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccount) GetServiceNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ServiceName.Get(), o.ServiceName.IsSet()
}

// SetServiceName sets field value
func (o *ServiceAccount) SetServiceName(v string) {
	o.ServiceName.Set(&v)
}

// GetCharacterId returns the CharacterId field value
func (o *ServiceAccount) GetCharacterId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CharacterId
}

// GetCharacterIdOk returns a tuple with the CharacterId field value
// and a boolean to check if the value has been set.
func (o *ServiceAccount) GetCharacterIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CharacterId, true
}

// SetCharacterId sets field value
func (o *ServiceAccount) SetCharacterId(v int64) {
	o.CharacterId = v
}

// GetUsername returns the Username field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ServiceAccount) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}

	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccount) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// SetUsername sets field value
func (o *ServiceAccount) SetUsername(v string) {
	o.Username.Set(&v)
}

// GetStatus returns the Status field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ServiceAccount) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}

	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccount) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// SetStatus sets field value
func (o *ServiceAccount) SetStatus(v string) {
	o.Status.Set(&v)
}

// GetDisplayName returns the DisplayName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ServiceAccount) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}

	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceAccount) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// SetDisplayName sets field value
func (o *ServiceAccount) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

func (o ServiceAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serviceId"] = o.ServiceId
	}
	if true {
		toSerialize["serviceName"] = o.ServiceName.Get()
	}
	if true {
		toSerialize["characterId"] = o.CharacterId
	}
	if true {
		toSerialize["username"] = o.Username.Get()
	}
	if true {
		toSerialize["status"] = o.Status.Get()
	}
	if true {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableServiceAccount struct {
	value *ServiceAccount
	isSet bool
}

func (v NullableServiceAccount) Get() *ServiceAccount {
	return v.value
}

func (v *NullableServiceAccount) Set(val *ServiceAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAccount(val *ServiceAccount) *NullableServiceAccount {
	return &NullableServiceAccount{value: val, isSet: true}
}

func (v NullableServiceAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


