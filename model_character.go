/*
Neucore API

Client library of Neucore API

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neucoreapi

import (
	"encoding/json"
	"time"
)

// checks if the Character type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Character{}

// Character struct for Character
type Character struct {
	// Shows if character's default refresh token is valid or not.                         This is null if there is no refresh token (EVE SSOv1 only)                         or a valid token but without scopes (SSOv2).
	ValidToken NullableBool `json:"validToken,omitempty"`
	// Date and time when the valid token property of the default token was last changed.
	ValidTokenTime NullableTime `json:"validTokenTime,omitempty"`
	// Date and time when the default token was last checked.
	TokenLastChecked NullableTime `json:"tokenLastChecked,omitempty"`
	// EVE character ID.
	Id NullableInt64 `json:"id"`
	// EVE character name.
	Name string `json:"name"`
	Main *bool `json:"main,omitempty"`
	// ESI tokens of the character (API: not included by default).
	EsiTokens []EsiToken `json:"esiTokens,omitempty"`
	Created NullableTime `json:"created,omitempty"`
	// Last ESI update.
	LastUpdate NullableTime `json:"lastUpdate,omitempty"`
	Corporation *Corporation `json:"corporation,omitempty"`
	// List of previous character names (API: not included by default).
	CharacterNameChanges []CharacterNameChange `json:"characterNameChanges,omitempty"`
}

// NewCharacter instantiates a new Character object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharacter(id NullableInt64, name string) *Character {
	this := Character{}
	this.Id = id
	this.Name = name
	return &this
}

// NewCharacterWithDefaults instantiates a new Character object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharacterWithDefaults() *Character {
	this := Character{}
	return &this
}

// GetValidToken returns the ValidToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Character) GetValidToken() bool {
	if o == nil || IsNil(o.ValidToken.Get()) {
		var ret bool
		return ret
	}
	return *o.ValidToken.Get()
}

// GetValidTokenOk returns a tuple with the ValidToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Character) GetValidTokenOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidToken.Get(), o.ValidToken.IsSet()
}

// HasValidToken returns a boolean if a field has been set.
func (o *Character) HasValidToken() bool {
	if o != nil && o.ValidToken.IsSet() {
		return true
	}

	return false
}

// SetValidToken gets a reference to the given NullableBool and assigns it to the ValidToken field.
func (o *Character) SetValidToken(v bool) {
	o.ValidToken.Set(&v)
}
// SetValidTokenNil sets the value for ValidToken to be an explicit nil
func (o *Character) SetValidTokenNil() {
	o.ValidToken.Set(nil)
}

// UnsetValidToken ensures that no value is present for ValidToken, not even an explicit nil
func (o *Character) UnsetValidToken() {
	o.ValidToken.Unset()
}

// GetValidTokenTime returns the ValidTokenTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Character) GetValidTokenTime() time.Time {
	if o == nil || IsNil(o.ValidTokenTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ValidTokenTime.Get()
}

// GetValidTokenTimeOk returns a tuple with the ValidTokenTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Character) GetValidTokenTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidTokenTime.Get(), o.ValidTokenTime.IsSet()
}

// HasValidTokenTime returns a boolean if a field has been set.
func (o *Character) HasValidTokenTime() bool {
	if o != nil && o.ValidTokenTime.IsSet() {
		return true
	}

	return false
}

// SetValidTokenTime gets a reference to the given NullableTime and assigns it to the ValidTokenTime field.
func (o *Character) SetValidTokenTime(v time.Time) {
	o.ValidTokenTime.Set(&v)
}
// SetValidTokenTimeNil sets the value for ValidTokenTime to be an explicit nil
func (o *Character) SetValidTokenTimeNil() {
	o.ValidTokenTime.Set(nil)
}

// UnsetValidTokenTime ensures that no value is present for ValidTokenTime, not even an explicit nil
func (o *Character) UnsetValidTokenTime() {
	o.ValidTokenTime.Unset()
}

// GetTokenLastChecked returns the TokenLastChecked field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Character) GetTokenLastChecked() time.Time {
	if o == nil || IsNil(o.TokenLastChecked.Get()) {
		var ret time.Time
		return ret
	}
	return *o.TokenLastChecked.Get()
}

// GetTokenLastCheckedOk returns a tuple with the TokenLastChecked field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Character) GetTokenLastCheckedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenLastChecked.Get(), o.TokenLastChecked.IsSet()
}

// HasTokenLastChecked returns a boolean if a field has been set.
func (o *Character) HasTokenLastChecked() bool {
	if o != nil && o.TokenLastChecked.IsSet() {
		return true
	}

	return false
}

// SetTokenLastChecked gets a reference to the given NullableTime and assigns it to the TokenLastChecked field.
func (o *Character) SetTokenLastChecked(v time.Time) {
	o.TokenLastChecked.Set(&v)
}
// SetTokenLastCheckedNil sets the value for TokenLastChecked to be an explicit nil
func (o *Character) SetTokenLastCheckedNil() {
	o.TokenLastChecked.Set(nil)
}

// UnsetTokenLastChecked ensures that no value is present for TokenLastChecked, not even an explicit nil
func (o *Character) UnsetTokenLastChecked() {
	o.TokenLastChecked.Unset()
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *Character) GetId() int64 {
	if o == nil || o.Id.Get() == nil {
		var ret int64
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Character) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *Character) SetId(v int64) {
	o.Id.Set(&v)
}

// GetName returns the Name field value
func (o *Character) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Character) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Character) SetName(v string) {
	o.Name = v
}

// GetMain returns the Main field value if set, zero value otherwise.
func (o *Character) GetMain() bool {
	if o == nil || IsNil(o.Main) {
		var ret bool
		return ret
	}
	return *o.Main
}

// GetMainOk returns a tuple with the Main field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Character) GetMainOk() (*bool, bool) {
	if o == nil || IsNil(o.Main) {
		return nil, false
	}
	return o.Main, true
}

// HasMain returns a boolean if a field has been set.
func (o *Character) HasMain() bool {
	if o != nil && !IsNil(o.Main) {
		return true
	}

	return false
}

// SetMain gets a reference to the given bool and assigns it to the Main field.
func (o *Character) SetMain(v bool) {
	o.Main = &v
}

// GetEsiTokens returns the EsiTokens field value if set, zero value otherwise.
func (o *Character) GetEsiTokens() []EsiToken {
	if o == nil || IsNil(o.EsiTokens) {
		var ret []EsiToken
		return ret
	}
	return o.EsiTokens
}

// GetEsiTokensOk returns a tuple with the EsiTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Character) GetEsiTokensOk() ([]EsiToken, bool) {
	if o == nil || IsNil(o.EsiTokens) {
		return nil, false
	}
	return o.EsiTokens, true
}

// HasEsiTokens returns a boolean if a field has been set.
func (o *Character) HasEsiTokens() bool {
	if o != nil && !IsNil(o.EsiTokens) {
		return true
	}

	return false
}

// SetEsiTokens gets a reference to the given []EsiToken and assigns it to the EsiTokens field.
func (o *Character) SetEsiTokens(v []EsiToken) {
	o.EsiTokens = v
}

// GetCreated returns the Created field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Character) GetCreated() time.Time {
	if o == nil || IsNil(o.Created.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Created.Get()
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Character) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Created.Get(), o.Created.IsSet()
}

// HasCreated returns a boolean if a field has been set.
func (o *Character) HasCreated() bool {
	if o != nil && o.Created.IsSet() {
		return true
	}

	return false
}

// SetCreated gets a reference to the given NullableTime and assigns it to the Created field.
func (o *Character) SetCreated(v time.Time) {
	o.Created.Set(&v)
}
// SetCreatedNil sets the value for Created to be an explicit nil
func (o *Character) SetCreatedNil() {
	o.Created.Set(nil)
}

// UnsetCreated ensures that no value is present for Created, not even an explicit nil
func (o *Character) UnsetCreated() {
	o.Created.Unset()
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Character) GetLastUpdate() time.Time {
	if o == nil || IsNil(o.LastUpdate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdate.Get()
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Character) GetLastUpdateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUpdate.Get(), o.LastUpdate.IsSet()
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *Character) HasLastUpdate() bool {
	if o != nil && o.LastUpdate.IsSet() {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given NullableTime and assigns it to the LastUpdate field.
func (o *Character) SetLastUpdate(v time.Time) {
	o.LastUpdate.Set(&v)
}
// SetLastUpdateNil sets the value for LastUpdate to be an explicit nil
func (o *Character) SetLastUpdateNil() {
	o.LastUpdate.Set(nil)
}

// UnsetLastUpdate ensures that no value is present for LastUpdate, not even an explicit nil
func (o *Character) UnsetLastUpdate() {
	o.LastUpdate.Unset()
}

// GetCorporation returns the Corporation field value if set, zero value otherwise.
func (o *Character) GetCorporation() Corporation {
	if o == nil || IsNil(o.Corporation) {
		var ret Corporation
		return ret
	}
	return *o.Corporation
}

// GetCorporationOk returns a tuple with the Corporation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Character) GetCorporationOk() (*Corporation, bool) {
	if o == nil || IsNil(o.Corporation) {
		return nil, false
	}
	return o.Corporation, true
}

// HasCorporation returns a boolean if a field has been set.
func (o *Character) HasCorporation() bool {
	if o != nil && !IsNil(o.Corporation) {
		return true
	}

	return false
}

// SetCorporation gets a reference to the given Corporation and assigns it to the Corporation field.
func (o *Character) SetCorporation(v Corporation) {
	o.Corporation = &v
}

// GetCharacterNameChanges returns the CharacterNameChanges field value if set, zero value otherwise.
func (o *Character) GetCharacterNameChanges() []CharacterNameChange {
	if o == nil || IsNil(o.CharacterNameChanges) {
		var ret []CharacterNameChange
		return ret
	}
	return o.CharacterNameChanges
}

// GetCharacterNameChangesOk returns a tuple with the CharacterNameChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Character) GetCharacterNameChangesOk() ([]CharacterNameChange, bool) {
	if o == nil || IsNil(o.CharacterNameChanges) {
		return nil, false
	}
	return o.CharacterNameChanges, true
}

// HasCharacterNameChanges returns a boolean if a field has been set.
func (o *Character) HasCharacterNameChanges() bool {
	if o != nil && !IsNil(o.CharacterNameChanges) {
		return true
	}

	return false
}

// SetCharacterNameChanges gets a reference to the given []CharacterNameChange and assigns it to the CharacterNameChanges field.
func (o *Character) SetCharacterNameChanges(v []CharacterNameChange) {
	o.CharacterNameChanges = v
}

func (o Character) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Character) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ValidToken.IsSet() {
		toSerialize["validToken"] = o.ValidToken.Get()
	}
	if o.ValidTokenTime.IsSet() {
		toSerialize["validTokenTime"] = o.ValidTokenTime.Get()
	}
	if o.TokenLastChecked.IsSet() {
		toSerialize["tokenLastChecked"] = o.TokenLastChecked.Get()
	}
	toSerialize["id"] = o.Id.Get()
	toSerialize["name"] = o.Name
	if !IsNil(o.Main) {
		toSerialize["main"] = o.Main
	}
	if !IsNil(o.EsiTokens) {
		toSerialize["esiTokens"] = o.EsiTokens
	}
	if o.Created.IsSet() {
		toSerialize["created"] = o.Created.Get()
	}
	if o.LastUpdate.IsSet() {
		toSerialize["lastUpdate"] = o.LastUpdate.Get()
	}
	if !IsNil(o.Corporation) {
		toSerialize["corporation"] = o.Corporation
	}
	if !IsNil(o.CharacterNameChanges) {
		toSerialize["characterNameChanges"] = o.CharacterNameChanges
	}
	return toSerialize, nil
}

type NullableCharacter struct {
	value *Character
	isSet bool
}

func (v NullableCharacter) Get() *Character {
	return v.value
}

func (v *NullableCharacter) Set(val *Character) {
	v.value = val
	v.isSet = true
}

func (v NullableCharacter) IsSet() bool {
	return v.isSet
}

func (v *NullableCharacter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharacter(val *Character) *NullableCharacter {
	return &NullableCharacter{value: val, isSet: true}
}

func (v NullableCharacter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharacter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


