openapi: 3.0.0
info:
  description: Client library of Neucore API
  title: Neucore API
  version: 2.2.0
servers:
- url: https://localhost/api
tags:
- description: API for applications.
  name: Application
- name: Application - Characters
- name: Application - ESI
- name: Application - Groups
- name: Application - Tracking
paths:
  /app/v1/show:
    get:
      description: "Needs role: app"
      operationId: showV1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: The app information
        "403":
          description: Not authorized.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Show app information.
      tags:
      - Application
  /app/v1/main/{cid}:
    get:
      deprecated: true
      description: "Needs role: app-chars.<br>It is possible that an account has no\
        \ main character."
      operationId: mainV1
      parameters:
      - description: EVE character ID.
        explode: false
        in: path
        name: cid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
          description: The main character
        "204":
          description: No main character found.
        "403":
          description: Not authorized.
        "404":
          description: Character not found. (default reason phrase)
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns the main character of the player account to which the character
        ID belongs.
      tags:
      - Application - Characters
  /app/v2/main/{cid}:
    get:
      description: "Needs role: app-chars.<br>It is possible that an account has no\
        \ main character."
      operationId: mainV2
      parameters:
      - description: EVE character ID.
        explode: false
        in: path
        name: cid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
          description: The main character
        "204":
          description: No main character found.
        "403":
          description: Not authorized.
        "404":
          description: "Reason phrase: Character not found."
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns the main character of the player account to which the character
        ID belongs.
      tags:
      - Application - Characters
  /app/v1/player/{characterId}:
    get:
      description: "Needs role: app-chars."
      operationId: playerV1
      parameters:
      - description: EVE character ID.
        explode: false
        in: path
        name: characterId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: "The player, only id and name properties are returned."
        "403":
          description: Not authorized.
        "404":
          description: Character not found.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns the player account to which the character ID belongs.
      tags:
      - Application - Characters
  /app/v1/players:
    post:
      description: "Needs role: app-chars."
      operationId: playersV1
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: integer
              type: array
        description: EVE character IDs array.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Player'
                type: array
          description: "The players, only id and name properties are returned."
        "400":
          description: Invalid body.
        "403":
          description: Not authorized.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns player accounts identified by character IDs.
      tags:
      - Application - Characters
  /app/v1/characters/{characterId}:
    get:
      description: "Needs role: app-chars."
      operationId: charactersV1
      parameters:
      - description: EVE character ID.
        explode: false
        in: path
        name: characterId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Character'
                type: array
          description: All characters from the player account.
        "403":
          description: Not authorized.
        "404":
          description: Character not found.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns all characters of the player account to which the character
        ID belongs.
      tags:
      - Application - Characters
  /app/v1/characters:
    post:
      description: "Needs role: app-chars."
      operationId: charactersBulkV1
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: integer
              type: array
        description: EVE character IDs array.
        required: true
      responses:
        "400":
          description: Invalid body.
        "200":
          content:
            application/json:
              schema:
                items:
                  items:
                    type: integer
                  type: array
                type: array
          description: All characters from the player account.
        "403":
          description: Not authorized.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns all characters from multiple player accounts identified by
        character IDs.
      tags:
      - Application - Characters
  /app/v1/character-list:
    post:
      description: "Needs role: app-chars."
      operationId: characterListV1
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: integer
              type: array
        description: Array with EVE character IDs.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Character'
                type: array
          description: A list of characters (does not include the corporation property).
        "400":
          description: Invalid body.
        "403":
          description: Not authorized.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns all known characters from the parameter list.
      tags:
      - Application - Characters
  /app/v1/player-chars/{playerId}:
    get:
      description: "Needs role: app-chars."
      operationId: playerCharactersV1
      parameters:
      - description: Player ID.
        explode: false
        in: path
        name: playerId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Character'
                type: array
          description: All characters from the player account.
        "403":
          description: Not authorized.
        "404":
          description: Player not found.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns all characters from the player account.
      tags:
      - Application - Characters
  /app/v1/player-with-characters/{characterId}:
    get:
      description: "Needs role: app-chars."
      operationId: playerWithCharactersV1
      parameters:
      - description: EVE character ID.
        explode: false
        in: path
        name: characterId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: "The player, only id, name and characters properties are returned."
        "403":
          description: Not authorized.
        "404":
          description: Character not found.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns the player account to which the character ID belongs with all
        characters.
      tags:
      - Application - Characters
  /app/v1/removed-characters/{characterId}:
    get:
      description: "Needs role: app-chars."
      operationId: removedCharactersV1
      parameters:
      - description: EVE character ID.
        explode: false
        in: path
        name: characterId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemovedCharacter'
                type: array
          description: All removed characters from the player account.
        "403":
          description: Not authorized.
        "404":
          description: Character not found.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: |-
        Returns all characters that were removed from the player account to which the character ID
                            belongs.
      tags:
      - Application - Characters
  /app/v1/incoming-characters/{characterId}:
    get:
      description: "Needs role: app-chars."
      operationId: incomingCharactersV1
      parameters:
      - description: EVE character ID.
        explode: false
        in: path
        name: characterId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemovedCharacter'
                type: array
          description: All incoming characters from the player account.
        "403":
          description: Not authorized.
        "404":
          description: Character not found.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: |-
        Returns all characters that were moved from another account to the player account to which the
                            ID belongs.
      tags:
      - Application - Characters
  /app/v1/corp-players/{corporationId}:
    get:
      description: "Needs role: app-chars."
      operationId: corporationPlayersV1
      parameters:
      - description: EVE corporation ID.
        explode: false
        in: path
        name: corporationId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Player'
                type: array
          description: "List of players, only id and name properties are returned."
        "403":
          description: Not authorized.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns a list of all players that have a character in the corporation.
      tags:
      - Application - Characters
  /app/v1/corp-characters/{corporationId}:
    get:
      description: "Needs role: app-chars."
      operationId: corporationCharactersV1
      parameters:
      - description: EVE corporation ID.
        explode: false
        in: path
        name: corporationId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Character'
                type: array
          description: List of characters (does not include the corporation property).
        "403":
          description: Not authorized.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns a list of all known characters from the corporation.
      tags:
      - Application - Characters
  /app/v1/esi/eve-login/{name}/characters:
    get:
      description: "Needs role: app-esi."
      operationId: esiEveLoginCharactersV1
      parameters:
      - description: EVE login name.
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 20
          pattern: "^[-._a-zA-Z0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: integer
                type: array
          description: ""
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: string
          description: EVE login not found.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns character IDs of characters that have an ESI token (including
        invalid) of an EVE login.
      tags:
      - Application - ESI
  /app/v1/esi/eve-login/{name}/token-data:
    get:
      description: "Needs role: app-esi."
      operationId: esiEveLoginTokenDataV1
      parameters:
      - description: "EVE login name, 'core.default' is not allowed."
        explode: false
        in: path
        name: name
        required: true
        schema:
          maxLength: 20
          pattern: "^[-._a-zA-Z0-9]+$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EsiTokenData'
                type: array
          description: ""
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                type: string
          description: EVE login not found.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns data for all valid tokens (roles are also checked if applicable)
        for an EVE login.
      tags:
      - Application - ESI
  /app/v1/esi:
    get:
      deprecated: true
      operationId: esiV1
      parameters:
      - explode: true
        in: query
        name: esi-path-query
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: datasource
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
          headers:
            Expires:
              explode: false
              schema:
                type: string
              style: simple
        "304":
          description: ""
          headers:
            Expires:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "401":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "403":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "420":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "429":
          content:
            application/json:
              schema:
                type: string
          description: "Too many errors, see reason phrase for more."
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "503":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "504":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: See GET /app/v2/esi
      tags:
      - Application - ESI
    post:
      deprecated: true
      operationId: esiPostV1
      parameters:
      - explode: true
        in: query
        name: esi-path-query
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: datasource
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: ""
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
          headers:
            Expires:
              explode: false
              schema:
                type: string
              style: simple
        "304":
          description: ""
          headers:
            Expires:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "401":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "403":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "420":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "429":
          content:
            application/json:
              schema:
                type: string
          description: "Too many errors, see reason phrase for more."
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "503":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "504":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: See POST /app/v2/esi
      tags:
      - Application - ESI
  /app/v2/esi:
    get:
      description: |-
        Needs role: app-esi<br>
             *         Public ESI routes are not allowed.<br>
             *         The following headers from ESI are passed through to the response if they exist:
                       Content-Type Expires X-Esi-Error-Limit-Remain X-Esi-Error-Limit-Reset X-Pages warning, Warning<br>
             *         The HTTP status code from ESI is also passed through, so there may be more than the documented ones.<br>
             *         The ESI path and query parameters can alternatively be appended to the path of this endpoint,
                       this allows to use OpenAPI clients that were generated for the ESI API,
                       see doc/api-examples for more.
      operationId: esiV2
      parameters:
      - description: The ESI path and query string (without the datasource parameter).
        explode: true
        in: query
        name: esi-path-query
        required: true
        schema:
          type: string
        style: form
      - description: |-
          The EVE character ID those token should be used to make the ESI request. Optionally
                                      followed by a colon and the name of an EVE login to use an alternative ESI token.
        explode: true
        in: query
        name: datasource
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: |-
            The data from ESI.<br>
                                        Please note that the JSON schema type can be an object, array or number etc.,
                                        unfortunately there is no way to document this.
          headers:
            Expires:
              description: RFC7231 formatted datetime string
              explode: false
              schema:
                type: string
              style: simple
        "304":
          description: Not modified
          headers:
            Expires:
              description: RFC7231 formatted datetime string
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                type: string
          description: "Bad request, see reason phrase and/or body for more."
        "401":
          content:
            application/json:
              schema:
                type: string
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                type: string
          description: Forbidden
        "420":
          content:
            application/json:
              schema:
                type: string
          description: Error limited
        "429":
          content:
            application/json:
              schema:
                type: string
          description: "Too many errors, see body for more."
          headers:
            Retry-After:
              description: Delay in seconds.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal server error
        "503":
          content:
            application/json:
              schema:
                type: string
          description: Service unavailable
        "504":
          content:
            application/json:
              schema:
                type: string
          description: Gateway timeout
      security:
      - BearerAuth: []
      summary: Makes an ESI GET request on behalf on an EVE character and returns
        the result.
      tags:
      - Application - ESI
    post:
      operationId: esiPostV2
      parameters:
      - explode: true
        in: query
        name: esi-path-query
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: datasource
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: JSON encoded data.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: ""
          headers:
            Expires:
              explode: false
              schema:
                type: string
              style: simple
        "304":
          description: ""
          headers:
            Expires:
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "401":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "403":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "420":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "429":
          content:
            application/json:
              schema:
                type: string
          description: ""
          headers:
            Retry-After:
              description: Delay in seconds.
              explode: false
              schema:
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "503":
          content:
            application/json:
              schema:
                type: string
          description: ""
        "504":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: "Same as GET /app/v2/esi, but for POST requests."
      tags:
      - Application - ESI
  /app/v1/groups/{cid}:
    get:
      deprecated: true
      description: "Needs role: app-groups.<br>Returns only groups that have been\
        \ added to the app as well."
      operationId: groupsV1
      parameters:
      - description: EVE character ID.
        explode: false
        in: path
        name: cid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: List of groups.
        "403":
          description: Not authorized.
        "404":
          description: Character not found. (default reason phrase)
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Return groups of the character's player account.
      tags:
      - Application - Groups
  /app/v2/groups/{cid}:
    get:
      description: "Needs role: app-groups.<br>Returns only groups that have been\
        \ added to the app as well."
      operationId: groupsV2
      parameters:
      - description: EVE character ID.
        explode: false
        in: path
        name: cid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: List of groups.
        "403":
          description: Not authorized.
        "404":
          description: "Reason phrase: Character not found."
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Return groups of the character's player account.
      tags:
      - Application - Groups
  /app/v1/groups:
    post:
      description: |-
        Needs role: app-groups.<br>
             *                  Returns only groups that have been added to the app as well.
             *                  Skips characters that are not found in the local database.
      operationId: groupsBulkV1
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: integer
              type: array
        description: EVE character IDs array.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CharacterGroups'
                type: array
          description: "List of characters (id, name and corporation properties only)\
            \ with groups."
        "400":
          description: Invalid body.
        "403":
          description: Not authorized.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: "Return groups of multiple players, identified by one of their character\
        \ IDs."
      tags:
      - Application - Groups
  /app/v1/corp-groups/{cid}:
    get:
      deprecated: true
      description: "Needs role: app-groups.<br>Returns only groups that have been\
        \ added to the app as well."
      operationId: corpGroupsV1
      parameters:
      - description: EVE corporation ID.
        explode: false
        in: path
        name: cid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: List of groups.
        "403":
          description: Not authorized.
        "404":
          description: Corporation not found. (default reason phrase)
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Return groups of the corporation.
      tags:
      - Application - Groups
  /app/v2/corp-groups/{cid}:
    get:
      description: "Needs role: app-groups.<br>Returns only groups that have been\
        \ added to the app as well."
      operationId: corpGroupsV2
      parameters:
      - description: EVE corporation ID.
        explode: false
        in: path
        name: cid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: List of groups.
        "403":
          description: Not authorized.
        "404":
          description: "Reason phrase: Corporation not found."
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Return groups of the corporation.
      tags:
      - Application - Groups
  /app/v1/corp-groups:
    post:
      description: |-
        Needs role: app-groups.<br>
             *                  Returns only groups that have been added to the app as well.
             *                  Skips corporations that are not found in the local database.
      operationId: corpGroupsBulkV1
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: integer
              type: array
        description: EVE corporation IDs array.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Corporation'
                type: array
          description: List of corporations with groups but without alliance.
        "400":
          description: Invalid body.
        "403":
          description: Not authorized.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Return groups of multiple corporations.
      tags:
      - Application - Groups
  /app/v1/alliance-groups/{aid}:
    get:
      deprecated: true
      description: "Needs role: app-groups.<br>Returns only groups that have been\
        \ added to the app as well."
      operationId: allianceGroupsV1
      parameters:
      - description: EVE alliance ID.
        explode: false
        in: path
        name: aid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: List of groups.
        "403":
          description: Not authorized.
        "404":
          description: Alliance not found. (default reason phrase)
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Return groups of the alliance.
      tags:
      - Application - Groups
  /app/v2/alliance-groups/{aid}:
    get:
      description: "Needs role: app-groups.<br>Returns only groups that have been\
        \ added to the app as well."
      operationId: allianceGroupsV2
      parameters:
      - description: EVE alliance ID.
        explode: false
        in: path
        name: aid
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: List of groups.
        "403":
          description: Not authorized.
        "404":
          description: "Reason phrase: Alliance not found."
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Return groups of the alliance.
      tags:
      - Application - Groups
  /app/v1/alliance-groups:
    post:
      description: |-
        Needs role: app-groups.<br>
             *                  Returns only groups that have been added to the app as well.
             *                  Skips alliances that are not found in the local database.
      operationId: allianceGroupsBulkV1
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: integer
              type: array
        description: EVE alliance IDs array.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Alliance'
                type: array
          description: List of alliances with groups.
        "400":
          description: Invalid body.
        "403":
          description: Not authorized.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Return groups of multiple alliances.
      tags:
      - Application - Groups
  /app/v1/groups-with-fallback:
    get:
      description: |-
        Needs role: app-groups.<br>
             *                  Returns only groups that have been added to the app as well.<br>
             *                  It is not checked if character, corporation and alliance match.
      operationId: groupsWithFallbackV1
      parameters:
      - description: EVE character ID.
        explode: true
        in: query
        name: character
        required: true
        schema:
          type: integer
        style: form
      - description: EVE corporation ID.
        explode: true
        in: query
        name: corporation
        required: true
        schema:
          type: integer
        style: form
      - description: EVE alliance ID.
        explode: true
        in: query
        name: alliance
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: List of groups.
        "403":
          description: Not authorized.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: "Returns groups from the character's account, if available, or the\
        \ corporation and alliance."
      tags:
      - Application - Groups
  /app/v1/group-members/{groupId}:
    get:
      description: "Needs role: app-groups."
      operationId: groupMembersV1
      parameters:
      - description: Group ID.
        explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: integer
        style: simple
      - description: Limit to characters that are a member of this corporation.
        explode: true
        in: query
        name: corporation
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: integer
                type: array
          description: List of character IDs.
        "403":
          description: Not authorized.
        "404":
          description: Group was not found or app may not see it.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Returns the main character IDs from all group members.
      tags:
      - Application - Groups
  /app/v1/corporation/{id}/member-tracking:
    get:
      description: "Needs role: app-tracking"
      operationId: memberTrackingV1
      parameters:
      - description: EVE corporation ID.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      - description: Limit to members who have been inactive for x days or longer.
        explode: true
        in: query
        name: inactive
        required: false
        schema:
          type: integer
        style: form
      - description: Limit to members who were active in the last x days.
        explode: true
        in: query
        name: active
        required: false
        schema:
          type: integer
        style: form
      - description: Limit to members with (true) or without (false) an account.
        explode: true
        in: query
        name: account
        required: false
        schema:
          enum:
          - "true"
          - "false"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CorporationMember'
                type: array
          description: Members ordered by logonDate descending (character and player
            properties excluded).
        "403":
          description: Not authorized.
        "500":
          content:
            application/json:
              schema:
                type: string
          description: ""
      security:
      - BearerAuth: []
      summary: Return corporation member tracking data.
      tags:
      - Application - Tracking
components:
  schemas:
    EsiTokenData:
      example:
        allianceId: 1
        corporationId: 6
        characterName: characterName
        lastChecked: lastChecked
        characterId: 0
      properties:
        lastChecked:
          nullable: true
          type: string
        characterId:
          type: integer
        characterName:
          type: string
        corporationId:
          nullable: true
          type: integer
        allianceId:
          nullable: true
          type: integer
      required:
      - allianceId
      - characterId
      - characterName
      - corporationId
      - lastChecked
      type: object
    CharacterGroups:
      example:
        character:
          validToken: true
          tokenLastChecked: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          lastUpdate: 2000-01-23T04:56:07.000+00:00
          corporation:
            autoAllowlist: true
            ticker: ticker
            alliance:
              ticker: ticker
              name: name
              groups:
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              id: 2
            trackingLastUpdate: 2000-01-23T04:56:07.000+00:00
            name: name
            groups:
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            id: 5
          name: name
          validTokenTime: 2000-01-23T04:56:07.000+00:00
          main: true
          characterNameChanges:
          - oldName: oldName
            changeDate: 2000-01-23T04:56:07.000+00:00
          - oldName: oldName
            changeDate: 2000-01-23T04:56:07.000+00:00
          id: 0
          esiTokens:
          - validToken: true
            character: null
            playerName: playerName
            hasRoles: true
            validTokenTime: 2000-01-23T04:56:07.000+00:00
            eveLoginId: 6
            characterId: 1
            lastChecked: 2000-01-23T04:56:07.000+00:00
            playerId: 5
          - validToken: true
            character: null
            playerName: playerName
            hasRoles: true
            validTokenTime: 2000-01-23T04:56:07.000+00:00
            eveLoginId: 6
            characterId: 1
            lastChecked: 2000-01-23T04:56:07.000+00:00
            playerId: 5
        groups:
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        deactivated: "no"
      properties:
        character:
          $ref: '#/components/schemas/Character'
        groups:
          items:
            $ref: '#/components/schemas/Group'
          type: array
        deactivated:
          description: Groups deactivation status.
          enum:
          - "no"
          - soon
          - "yes"
          type: string
      required:
      - character
      - deactivated
      - groups
      type: object
    PluginConfigurationDatabase:
      description: |-
        Plugin configuration stored in database.

        API: The required properties are necessary for the service page where users register their account. The rest
        is necessary for the admin page.
      properties:
        directoryName:
          description: |-
            Directory where the plugin.yml file is stored.

            Only from database but always set when the data from the file is read.
          type: string
        URLs:
          items:
            $ref: '#/components/schemas/PluginConfigurationURL'
          type: array
        textTop:
          type: string
        textAccount:
          type: string
        textRegister:
          type: string
        textPending:
          type: string
        configurationData:
          type: string
        active:
          description: |-
            Inactive plugins are neither updated by the cron job nor displayed to the user.

            From admin UI.
          type: boolean
        requiredGroups:
          description: From admin UI.
          items:
            type: integer
          type: array
      required:
      - URLs
      - configurationData
      - textAccount
      - textPending
      - textRegister
      - textTop
      type: object
    PluginConfigurationFile:
      description: |-
        Plugin configuration from YAML file.

        API: The required properties are necessary for the service page where users register their account. The rest
        is necessary for the admin page.
      properties:
        directoryName:
          description: |-
            Directory where the plugin.yml file is stored.

            Only from database but always set when the data from the file is read.
          type: string
        URLs:
          items:
            $ref: '#/components/schemas/PluginConfigurationURL'
          type: array
        textTop:
          type: string
        textAccount:
          type: string
        textRegister:
          type: string
        textPending:
          type: string
        configurationData:
          type: string
        name:
          type: string
        types:
          description: Not part of the file but will be set when the plugin implementation
            is loaded.
          enum:
          - general
          - service
          items:
            type: string
          type: array
        oneAccount:
          type: boolean
        properties:
          enum:
          - username
          - password
          - email
          - status
          - name
          items:
            type: string
          type: array
        showPassword:
          type: boolean
        actions:
          enum:
          - update-account
          - reset-password
          items:
            type: string
          type: array
      required:
      - actions
      - properties
      type: object
    PluginConfigurationURL:
      properties:
        url:
          description: "placeholders: {plugin_id}, {username}, {password}, {email}"
          type: string
        title:
          type: string
        target:
          type: string
      required:
      - target
      - title
      - url
      type: object
    SearchResult:
      properties:
        characterId:
          type: integer
        characterName:
          type: string
        playerId:
          type: integer
        playerName:
          type: string
      required:
      - characterId
      - characterName
      - playerId
      - playerName
      type: object
    ServiceAccount:
      example:
        name: name
        serviceId: 0
        serviceName: serviceName
        characterId: 6
        username: username
        status: Pending
      properties:
        serviceId:
          type: integer
        serviceName:
          type: string
        characterId:
          format: int64
          type: integer
        username:
          nullable: true
          type: string
        status:
          enum:
          - Pending
          - Active
          - Deactivated
          - Unknown
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      required:
      - characterId
      - name
      - serviceId
      - serviceName
      - status
      - username
      type: object
    Alliance:
      description: EVE Alliance.
      example:
        ticker: ticker
        name: name
        groups:
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        id: 2
      properties:
        id:
          description: EVE alliance ID.
          format: int64
          nullable: true
          type: integer
        name:
          description: EVE alliance name.
          nullable: true
          type: string
        ticker:
          description: Alliance ticker.
          nullable: true
          type: string
        groups:
          description: "Groups for automatic assignment (API: not included by default)."
          items:
            $ref: '#/components/schemas/Group'
          type: array
      required:
      - id
      - name
      - ticker
      type: object
    App:
      example:
        eveLogins:
        - esiScopes: esiScopes
          name: name
          description: description
          id: 1
          eveRoles:
          - eveRoles
          - eveRoles
        - esiScopes: esiScopes
          name: name
          description: description
          id: 1
          eveRoles:
          - eveRoles
          - eveRoles
        roles:
        - null
        - null
        name: name
        groups:
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        id: 0
      properties:
        id:
          description: App ID
          nullable: true
          type: integer
        name:
          description: App name
          maxLength: 255
          nullable: true
          type: string
        roles:
          description: Roles for authorization.
          items:
            $ref: '#/components/schemas/Role'
          type: array
        groups:
          description: Groups the app can see.
          items:
            $ref: '#/components/schemas/Group'
          type: array
        eveLogins:
          items:
            $ref: '#/components/schemas/EveLogin'
          type: array
      required:
      - id
      - name
      type: object
    Character:
      example:
        validToken: true
        tokenLastChecked: 2000-01-23T04:56:07.000+00:00
        created: 2000-01-23T04:56:07.000+00:00
        lastUpdate: 2000-01-23T04:56:07.000+00:00
        corporation:
          autoAllowlist: true
          ticker: ticker
          alliance:
            ticker: ticker
            name: name
            groups:
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            id: 2
          trackingLastUpdate: 2000-01-23T04:56:07.000+00:00
          name: name
          groups:
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          id: 5
        name: name
        validTokenTime: 2000-01-23T04:56:07.000+00:00
        main: true
        characterNameChanges:
        - oldName: oldName
          changeDate: 2000-01-23T04:56:07.000+00:00
        - oldName: oldName
          changeDate: 2000-01-23T04:56:07.000+00:00
        id: 0
        esiTokens:
        - validToken: true
          character: null
          playerName: playerName
          hasRoles: true
          validTokenTime: 2000-01-23T04:56:07.000+00:00
          eveLoginId: 6
          characterId: 1
          lastChecked: 2000-01-23T04:56:07.000+00:00
          playerId: 5
        - validToken: true
          character: null
          playerName: playerName
          hasRoles: true
          validTokenTime: 2000-01-23T04:56:07.000+00:00
          eveLoginId: 6
          characterId: 1
          lastChecked: 2000-01-23T04:56:07.000+00:00
          playerId: 5
      properties:
        validToken:
          description: |-
            Shows if character's default refresh token is valid or not.
                                    This is null if there is no refresh token (EVE SSOv1 only)
                                    or a valid token but without scopes (SSOv2).
          nullable: true
          type: boolean
        validTokenTime:
          description: Date and time when the valid token property of the default
            token was last changed.
          format: date-time
          nullable: true
          type: string
        tokenLastChecked:
          description: Date and time when the default token was last checked.
          format: date-time
          nullable: true
          type: string
        id:
          description: EVE character ID.
          format: int64
          nullable: true
          type: integer
        name:
          description: EVE character name.
          type: string
        main:
          type: boolean
        esiTokens:
          description: "ESI tokens of the character (API: not included by default)."
          items:
            $ref: '#/components/schemas/EsiToken'
          type: array
        created:
          format: date-time
          nullable: true
          type: string
        lastUpdate:
          description: Last ESI update.
          format: date-time
          nullable: true
          type: string
        corporation:
          $ref: '#/components/schemas/Corporation'
        characterNameChanges:
          description: "List of previous character names (API: not included by default)."
          items:
            $ref: '#/components/schemas/CharacterNameChange'
          type: array
      required:
      - id
      - name
      type: object
    CharacterNameChange:
      description: A previous character name.
      example:
        oldName: oldName
        changeDate: 2000-01-23T04:56:07.000+00:00
      properties:
        oldName:
          type: string
        changeDate:
          format: date-time
          nullable: true
          type: string
      required:
      - changeDate
      - oldName
      type: object
    Corporation:
      description: EVE corporation.
      example:
        autoAllowlist: true
        ticker: ticker
        alliance:
          ticker: ticker
          name: name
          groups:
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          id: 2
        trackingLastUpdate: 2000-01-23T04:56:07.000+00:00
        name: name
        groups:
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        id: 5
      properties:
        id:
          description: EVE corporation ID.
          format: int64
          nullable: true
          type: integer
        name:
          description: EVE corporation name.
          nullable: true
          type: string
        ticker:
          description: Corporation ticker.
          nullable: true
          type: string
        alliance:
          $ref: '#/components/schemas/Alliance'
        groups:
          description: "Groups for automatic assignment (API: not included by default)."
          items:
            $ref: '#/components/schemas/Group'
          type: array
        trackingLastUpdate:
          description: "Last update of corporation member tracking data (API: not\
            \ included by default)."
          format: date-time
          nullable: true
          type: string
        autoAllowlist:
          description: "True if this corporation was automatically placed on the allowlist\
            \ of a watchlist (API: not included by default)."
          type: boolean
      required:
      - id
      - name
      - ticker
      type: object
    CorporationMember:
      description: "The player property contains only id and name, character does\
        \ not contain corporation."
      example:
        missingCharacterMailSentDate: 2000-01-23T04:56:07.000+00:00
        character:
          validToken: true
          tokenLastChecked: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          lastUpdate: 2000-01-23T04:56:07.000+00:00
          corporation:
            autoAllowlist: true
            ticker: ticker
            alliance:
              ticker: ticker
              name: name
              groups:
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              id: 2
            trackingLastUpdate: 2000-01-23T04:56:07.000+00:00
            name: name
            groups:
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            id: 5
          name: name
          validTokenTime: 2000-01-23T04:56:07.000+00:00
          main: true
          characterNameChanges:
          - oldName: oldName
            changeDate: 2000-01-23T04:56:07.000+00:00
          - oldName: oldName
            changeDate: 2000-01-23T04:56:07.000+00:00
          id: 0
          esiTokens:
          - validToken: true
            character: null
            playerName: playerName
            hasRoles: true
            validTokenTime: 2000-01-23T04:56:07.000+00:00
            eveLoginId: 6
            characterId: 1
            lastChecked: 2000-01-23T04:56:07.000+00:00
            playerId: 5
          - validToken: true
            character: null
            playerName: playerName
            hasRoles: true
            validTokenTime: 2000-01-23T04:56:07.000+00:00
            eveLoginId: 6
            characterId: 1
            lastChecked: 2000-01-23T04:56:07.000+00:00
            playerId: 5
        missingCharacterMailSentNumber: 5
        name: name
        shipType:
          name: name
          id: 1
        logoffDate: 2000-01-23T04:56:07.000+00:00
        location:
          name: name
          id: 6
          category: system
        logonDate: 2000-01-23T04:56:07.000+00:00
        id: 0
        missingCharacterMailSentResult: missingCharacterMailSentResult
        startDate: 2000-01-23T04:56:07.000+00:00
        player:
          incomingCharacters:
          - newPlayerName: newPlayerName
            reason: moved
            newPlayerId: 5
            characterName: characterName
            characterId: 2
            deletedBy: null
            player: null
            removedDate: 2000-01-23T04:56:07.000+00:00
          - newPlayerName: newPlayerName
            reason: moved
            newPlayerId: 5
            characterName: characterName
            characterId: 2
            deletedBy: null
            player: null
            removedDate: 2000-01-23T04:56:07.000+00:00
          serviceAccounts:
          - name: name
            serviceId: 0
            serviceName: serviceName
            characterId: 6
            username: username
            status: Pending
          - name: name
            serviceId: 0
            serviceName: serviceName
            characterId: 6
            username: username
            status: Pending
          corporationName: corporationName
          roles:
          - null
          - null
          groups:
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          removedCharacters:
          - newPlayerName: newPlayerName
            reason: moved
            newPlayerId: 5
            characterName: characterName
            characterId: 2
            deletedBy: null
            player: null
            removedDate: 2000-01-23T04:56:07.000+00:00
          - newPlayerName: newPlayerName
            reason: moved
            newPlayerId: 5
            characterName: characterName
            characterId: 2
            deletedBy: null
            player: null
            removedDate: 2000-01-23T04:56:07.000+00:00
          characters:
          - validToken: true
            tokenLastChecked: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            lastUpdate: 2000-01-23T04:56:07.000+00:00
            corporation:
              autoAllowlist: true
              ticker: ticker
              alliance:
                ticker: ticker
                name: name
                groups:
                - isDefault: true
                  visibility: private
                  autoAccept: true
                  name: name
                  description: description
                  id: 6
                - isDefault: true
                  visibility: private
                  autoAccept: true
                  name: name
                  description: description
                  id: 6
                id: 2
              trackingLastUpdate: 2000-01-23T04:56:07.000+00:00
              name: name
              groups:
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              id: 5
            name: name
            validTokenTime: 2000-01-23T04:56:07.000+00:00
            main: true
            characterNameChanges:
            - oldName: oldName
              changeDate: 2000-01-23T04:56:07.000+00:00
            - oldName: oldName
              changeDate: 2000-01-23T04:56:07.000+00:00
            id: 0
            esiTokens:
            - validToken: true
              character: null
              playerName: playerName
              hasRoles: true
              validTokenTime: 2000-01-23T04:56:07.000+00:00
              eveLoginId: 6
              characterId: 1
              lastChecked: 2000-01-23T04:56:07.000+00:00
              playerId: 5
            - validToken: true
              character: null
              playerName: playerName
              hasRoles: true
              validTokenTime: 2000-01-23T04:56:07.000+00:00
              eveLoginId: 6
              characterId: 1
              lastChecked: 2000-01-23T04:56:07.000+00:00
              playerId: 5
          - validToken: true
            tokenLastChecked: 2000-01-23T04:56:07.000+00:00
            created: 2000-01-23T04:56:07.000+00:00
            lastUpdate: 2000-01-23T04:56:07.000+00:00
            corporation:
              autoAllowlist: true
              ticker: ticker
              alliance:
                ticker: ticker
                name: name
                groups:
                - isDefault: true
                  visibility: private
                  autoAccept: true
                  name: name
                  description: description
                  id: 6
                - isDefault: true
                  visibility: private
                  autoAccept: true
                  name: name
                  description: description
                  id: 6
                id: 2
              trackingLastUpdate: 2000-01-23T04:56:07.000+00:00
              name: name
              groups:
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              id: 5
            name: name
            validTokenTime: 2000-01-23T04:56:07.000+00:00
            main: true
            characterNameChanges:
            - oldName: oldName
              changeDate: 2000-01-23T04:56:07.000+00:00
            - oldName: oldName
              changeDate: 2000-01-23T04:56:07.000+00:00
            id: 0
            esiTokens:
            - validToken: true
              character: null
              playerName: playerName
              hasRoles: true
              validTokenTime: 2000-01-23T04:56:07.000+00:00
              eveLoginId: 6
              characterId: 1
              lastChecked: 2000-01-23T04:56:07.000+00:00
              playerId: 5
            - validToken: true
              character: null
              playerName: playerName
              hasRoles: true
              validTokenTime: 2000-01-23T04:56:07.000+00:00
              eveLoginId: 6
              characterId: 1
              lastChecked: 2000-01-23T04:56:07.000+00:00
              playerId: 5
          managerApps:
          - eveLogins:
            - esiScopes: esiScopes
              name: name
              description: description
              id: 1
              eveRoles:
              - eveRoles
              - eveRoles
            - esiScopes: esiScopes
              name: name
              description: description
              id: 1
              eveRoles:
              - eveRoles
              - eveRoles
            roles:
            - null
            - null
            name: name
            groups:
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            id: 0
          - eveLogins:
            - esiScopes: esiScopes
              name: name
              description: description
              id: 1
              eveRoles:
              - eveRoles
              - eveRoles
            - esiScopes: esiScopes
              name: name
              description: description
              id: 1
              eveRoles:
              - eveRoles
              - eveRoles
            roles:
            - null
            - null
            name: name
            groups:
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            id: 0
          name: name
          allianceName: allianceName
          id: 5
          managerGroups:
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          characterId: 1
          status: standard
      properties:
        player:
          $ref: '#/components/schemas/Player'
        id:
          description: EVE Character ID.
          format: int64
          nullable: true
          type: integer
        name:
          description: EVE Character name.
          nullable: true
          type: string
        location:
          $ref: '#/components/schemas/EsiLocation'
        logoffDate:
          format: date-time
          nullable: true
          type: string
        logonDate:
          format: date-time
          nullable: true
          type: string
        shipType:
          $ref: '#/components/schemas/EsiType'
        startDate:
          format: date-time
          nullable: true
          type: string
        character:
          $ref: '#/components/schemas/Character'
        missingCharacterMailSentDate:
          description: Date and time of the last sent mail.
          format: date-time
          nullable: true
          type: string
        missingCharacterMailSentResult:
          description: "Result of the last sent mail (OK, Blocked, CSPA charge > 0)"
          nullable: true
          type: string
        missingCharacterMailSentNumber:
          description: "Number of mails sent, is reset when the character is added."
          type: integer
      required:
      - id
      - name
      type: object
    EsiLocation:
      description: "An EVE location (System, Station, Structure, ...)"
      example:
        name: name
        id: 6
        category: system
      properties:
        id:
          format: int64
          nullable: true
          type: integer
        category:
          enum:
          - system
          - station
          - structure
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      required:
      - category
      - id
      - name
      type: object
    EsiToken:
      example:
        validToken: true
        character: null
        playerName: playerName
        hasRoles: true
        validTokenTime: 2000-01-23T04:56:07.000+00:00
        eveLoginId: 6
        characterId: 1
        lastChecked: 2000-01-23T04:56:07.000+00:00
        playerId: 5
      properties:
        eveLoginId:
          description: ID of EveLogin
          type: integer
        characterId:
          description: ID of Character
          type: integer
        playerId:
          description: ID of Player
          type: integer
        playerName:
          description: Name of Player
          type: string
        character:
          $ref: '#/components/schemas/Character'
        validToken:
          description: |-
            Shows if the refresh token is valid or not.

            This is null if there is no refresh token (EVE SSOv1 only)
            or a valid token but without scopes (SSOv2).
          nullable: true
          type: boolean
        validTokenTime:
          description: Date and time when the valid token property was last changed.
          format: date-time
          nullable: true
          type: string
        hasRoles:
          description: |-
            Shows if the EVE character has all required roles for the login.

            Null if the login does not require any roles or if the token is invalid.
          nullable: true
          type: boolean
        lastChecked:
          description: When the refresh token was last checked for validity.
          format: date-time
          nullable: true
          type: string
      required:
      - characterId
      - eveLoginId
      - hasRoles
      - playerId
      - validToken
      - validTokenTime
      type: object
    EsiType:
      description: An EVE name from the category "inventory_type".
      example:
        name: name
        id: 1
      properties:
        id:
          format: int64
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
      required:
      - id
      - name
      type: object
    EveLogin:
      example:
        esiScopes: esiScopes
        name: name
        description: description
        id: 1
        eveRoles:
        - eveRoles
        - eveRoles
      properties:
        id:
          nullable: true
          type: integer
        name:
          description: Names starting with 'core.' are reserved for internal use.
          maxLength: 20
          nullable: false
          pattern: "^[-._a-zA-Z0-9]+$"
          type: string
        description:
          maxLength: 1024
          type: string
        esiScopes:
          maxLength: 8192
          type: string
        eveRoles:
          description: "Maximum length of all roles separated by comma: 1024."
          items:
            type: string
          type: array
      required:
      - description
      - esiScopes
      - eveRoles
      - id
      - name
      type: object
    Group:
      example:
        isDefault: true
        visibility: private
        autoAccept: true
        name: name
        description: description
        id: 6
      properties:
        id:
          description: Group ID.
          nullable: true
          type: integer
        name:
          description: A unique group name (can be changed).
          maxLength: 64
          nullable: true
          pattern: "^[-._a-zA-Z0-9]+$"
          type: string
        description:
          maxLength: 1024
          nullable: true
          type: string
        visibility:
          enum:
          - private
          - public
          type: string
        autoAccept:
          type: boolean
        isDefault:
          type: boolean
      required:
      - id
      - name
      type: object
    GroupApplication:
      description: The player property contains only id and name.
      properties:
        id:
          nullable: true
          type: integer
        player:
          $ref: '#/components/schemas/Player'
        group:
          $ref: '#/components/schemas/Group'
        created:
          format: date-time
          nullable: true
          type: string
        status:
          description: Group application status.
          enum:
          - pending
          - accepted
          - denied
          type: string
      required:
      - created
      - group
      - id
      - player
      type: object
    Player:
      example:
        incomingCharacters:
        - newPlayerName: newPlayerName
          reason: moved
          newPlayerId: 5
          characterName: characterName
          characterId: 2
          deletedBy: null
          player: null
          removedDate: 2000-01-23T04:56:07.000+00:00
        - newPlayerName: newPlayerName
          reason: moved
          newPlayerId: 5
          characterName: characterName
          characterId: 2
          deletedBy: null
          player: null
          removedDate: 2000-01-23T04:56:07.000+00:00
        serviceAccounts:
        - name: name
          serviceId: 0
          serviceName: serviceName
          characterId: 6
          username: username
          status: Pending
        - name: name
          serviceId: 0
          serviceName: serviceName
          characterId: 6
          username: username
          status: Pending
        corporationName: corporationName
        roles:
        - null
        - null
        groups:
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        removedCharacters:
        - newPlayerName: newPlayerName
          reason: moved
          newPlayerId: 5
          characterName: characterName
          characterId: 2
          deletedBy: null
          player: null
          removedDate: 2000-01-23T04:56:07.000+00:00
        - newPlayerName: newPlayerName
          reason: moved
          newPlayerId: 5
          characterName: characterName
          characterId: 2
          deletedBy: null
          player: null
          removedDate: 2000-01-23T04:56:07.000+00:00
        characters:
        - validToken: true
          tokenLastChecked: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          lastUpdate: 2000-01-23T04:56:07.000+00:00
          corporation:
            autoAllowlist: true
            ticker: ticker
            alliance:
              ticker: ticker
              name: name
              groups:
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              id: 2
            trackingLastUpdate: 2000-01-23T04:56:07.000+00:00
            name: name
            groups:
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            id: 5
          name: name
          validTokenTime: 2000-01-23T04:56:07.000+00:00
          main: true
          characterNameChanges:
          - oldName: oldName
            changeDate: 2000-01-23T04:56:07.000+00:00
          - oldName: oldName
            changeDate: 2000-01-23T04:56:07.000+00:00
          id: 0
          esiTokens:
          - validToken: true
            character: null
            playerName: playerName
            hasRoles: true
            validTokenTime: 2000-01-23T04:56:07.000+00:00
            eveLoginId: 6
            characterId: 1
            lastChecked: 2000-01-23T04:56:07.000+00:00
            playerId: 5
          - validToken: true
            character: null
            playerName: playerName
            hasRoles: true
            validTokenTime: 2000-01-23T04:56:07.000+00:00
            eveLoginId: 6
            characterId: 1
            lastChecked: 2000-01-23T04:56:07.000+00:00
            playerId: 5
        - validToken: true
          tokenLastChecked: 2000-01-23T04:56:07.000+00:00
          created: 2000-01-23T04:56:07.000+00:00
          lastUpdate: 2000-01-23T04:56:07.000+00:00
          corporation:
            autoAllowlist: true
            ticker: ticker
            alliance:
              ticker: ticker
              name: name
              groups:
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              - isDefault: true
                visibility: private
                autoAccept: true
                name: name
                description: description
                id: 6
              id: 2
            trackingLastUpdate: 2000-01-23T04:56:07.000+00:00
            name: name
            groups:
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            - isDefault: true
              visibility: private
              autoAccept: true
              name: name
              description: description
              id: 6
            id: 5
          name: name
          validTokenTime: 2000-01-23T04:56:07.000+00:00
          main: true
          characterNameChanges:
          - oldName: oldName
            changeDate: 2000-01-23T04:56:07.000+00:00
          - oldName: oldName
            changeDate: 2000-01-23T04:56:07.000+00:00
          id: 0
          esiTokens:
          - validToken: true
            character: null
            playerName: playerName
            hasRoles: true
            validTokenTime: 2000-01-23T04:56:07.000+00:00
            eveLoginId: 6
            characterId: 1
            lastChecked: 2000-01-23T04:56:07.000+00:00
            playerId: 5
          - validToken: true
            character: null
            playerName: playerName
            hasRoles: true
            validTokenTime: 2000-01-23T04:56:07.000+00:00
            eveLoginId: 6
            characterId: 1
            lastChecked: 2000-01-23T04:56:07.000+00:00
            playerId: 5
        managerApps:
        - eveLogins:
          - esiScopes: esiScopes
            name: name
            description: description
            id: 1
            eveRoles:
            - eveRoles
            - eveRoles
          - esiScopes: esiScopes
            name: name
            description: description
            id: 1
            eveRoles:
            - eveRoles
            - eveRoles
          roles:
          - null
          - null
          name: name
          groups:
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          id: 0
        - eveLogins:
          - esiScopes: esiScopes
            name: name
            description: description
            id: 1
            eveRoles:
            - eveRoles
            - eveRoles
          - esiScopes: esiScopes
            name: name
            description: description
            id: 1
            eveRoles:
            - eveRoles
            - eveRoles
          roles:
          - null
          - null
          name: name
          groups:
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          - isDefault: true
            visibility: private
            autoAccept: true
            name: name
            description: description
            id: 6
          id: 0
        name: name
        allianceName: allianceName
        id: 5
        managerGroups:
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        - isDefault: true
          visibility: private
          autoAccept: true
          name: name
          description: description
          id: 6
        characterId: 1
        status: standard
      properties:
        serviceAccounts:
          description: "External service accounts (API: not included by default)"
          items:
            $ref: '#/components/schemas/ServiceAccount'
          type: array
        characterId:
          description: "ID of main character (API: not included by default)"
          type: integer
        corporationName:
          description: "Corporation of main character (API: not included by default)"
          type: string
        allianceName:
          description: "Alliance of main character (API: not included by default)"
          type: string
        id:
          nullable: true
          type: integer
        name:
          description: |-
            A name for the player.

            This is the EVE character name of the current main character or of
            the last main character if there is currently none.
          type: string
        status:
          description: Player account status.
          enum:
          - standard
          - managed
          type: string
        roles:
          description: Roles for authorization.
          items:
            $ref: '#/components/schemas/Role'
          type: array
        characters:
          items:
            $ref: '#/components/schemas/Character'
          type: array
        groups:
          description: Group membership.
          items:
            $ref: '#/components/schemas/Group'
          type: array
        managerGroups:
          description: Manager of groups.
          items:
            $ref: '#/components/schemas/Group'
          type: array
        managerApps:
          description: Manager of apps.
          items:
            $ref: '#/components/schemas/App'
          type: array
        removedCharacters:
          description: "Characters that were removed from a player (API: not included\
            \ by default)."
          items:
            $ref: '#/components/schemas/RemovedCharacter'
          type: array
        incomingCharacters:
          description: "Characters that were moved from another player account to\
            \ this account (API: not included by default)."
          items:
            $ref: '#/components/schemas/RemovedCharacter'
          type: array
      required:
      - id
      - name
      type: object
    Plugin:
      properties:
        id:
          nullable: true
          type: integer
        name:
          type: string
        configurationDatabase:
          $ref: '#/components/schemas/PluginConfigurationDatabase'
        configurationFile:
          $ref: '#/components/schemas/PluginConfigurationFile'
      required:
      - id
      - name
      type: object
    RemovedCharacter:
      example:
        newPlayerName: newPlayerName
        reason: moved
        newPlayerId: 5
        characterName: characterName
        characterId: 2
        deletedBy: null
        player: null
        removedDate: 2000-01-23T04:56:07.000+00:00
      properties:
        newPlayerId:
          type: integer
        newPlayerName:
          type: string
        player:
          $ref: '#/components/schemas/Player'
        characterId:
          description: EVE character ID.
          format: int64
          nullable: true
          type: integer
        characterName:
          description: EVE character name.
          nullable: true
          type: string
        removedDate:
          description: Date of removal.
          format: date-time
          nullable: true
          type: string
        reason:
          description: How it was removed (deleted or moved to another account).
          enum:
          - moved
          - moved-owner-changed
          - deleted-biomassed
          - deleted-owner-changed
          - deleted-lost-access
          - deleted-manually
          nullable: true
          type: string
        deletedBy:
          $ref: '#/components/schemas/Player'
      required:
      - characterId
      - characterName
      - reason
      - removedDate
      type: object
    Role:
      description: Roles are used to determined player permissions.
      enum:
      - app
      - app-groups
      - app-chars
      - app-tracking
      - app-esi
      - user
      - user-admin
      - user-manager
      - user-chars
      - group-admin
      - group-manager
      - app-admin
      - app-manager
      - plugin-admin
      - statistics
      - esi
      - settings
      - tracking
      - tracking-admin
      - watchlist
      - watchlist-manager
      - watchlist-admin
      type: string
    SystemVariable:
      description: |-
        A system settings variable.

        This is also used as a storage for Storage\Variables with the prefix "__storage__" if APCu is not available.
      properties:
        name:
          description: Variable name.
          maxLength: 255
          type: string
        value:
          description: Variable value.
          nullable: true
          type: string
      required:
      - name
      - value
      type: object
    Watchlist:
      properties:
        id:
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
        lockWatchlistSettings:
          type: boolean
      required:
      - id
      - name
      type: object
    TotalMonthlyAppRequests:
      properties:
        requests:
          type: integer
        year:
          type: integer
        month:
          type: integer
      required:
      - month
      - requests
      - year
      type: object
    MonthlyAppRequests:
      properties:
        app_id:
          type: integer
        app_name:
          type: string
        requests:
          type: integer
        year:
          type: integer
        month:
          type: integer
      required:
      - app_id
      - app_name
      - month
      - requests
      - year
      type: object
    TotalDailyAppRequests:
      properties:
        requests:
          type: integer
        year:
          type: integer
        month:
          type: integer
        day_of_month:
          type: integer
      required:
      - day_of_month
      - month
      - requests
      - year
      type: object
    HourlyAppRequests:
      properties:
        app_id:
          type: integer
        app_name:
          type: string
        requests:
          type: integer
        year:
          type: integer
        month:
          type: integer
        day_of_month:
          type: integer
        hour:
          type: integer
      required:
      - app_id
      - app_name
      - day_of_month
      - hour
      - month
      - requests
      - year
      type: object
    PlayerLoginStatistics:
      properties:
        unique_logins:
          type: integer
        total_logins:
          type: integer
        year:
          type: integer
        month:
          type: integer
      required:
      - month
      - total_logins
      - unique_logins
      - year
      type: object
  securitySchemes:
    BearerAuth:
      description: The API key is a base64-encoded string containing the app ID and
        secret separated by a colon
      scheme: bearer
      type: http
