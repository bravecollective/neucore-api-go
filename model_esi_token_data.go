/*
Neucore API

Client library of Neucore API

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package neucoreapi

import (
	"encoding/json"
)

// checks if the EsiTokenData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EsiTokenData{}

// EsiTokenData struct for EsiTokenData
type EsiTokenData struct {
	LastChecked NullableString `json:"lastChecked"`
	CharacterId int32 `json:"characterId"`
	CharacterName string `json:"characterName"`
	CorporationId NullableInt32 `json:"corporationId"`
	AllianceId NullableInt32 `json:"allianceId"`
}

// NewEsiTokenData instantiates a new EsiTokenData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEsiTokenData(lastChecked NullableString, characterId int32, characterName string, corporationId NullableInt32, allianceId NullableInt32) *EsiTokenData {
	this := EsiTokenData{}
	this.LastChecked = lastChecked
	this.CharacterId = characterId
	this.CharacterName = characterName
	this.CorporationId = corporationId
	this.AllianceId = allianceId
	return &this
}

// NewEsiTokenDataWithDefaults instantiates a new EsiTokenData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEsiTokenDataWithDefaults() *EsiTokenData {
	this := EsiTokenData{}
	return &this
}

// GetLastChecked returns the LastChecked field value
// If the value is explicit nil, the zero value for string will be returned
func (o *EsiTokenData) GetLastChecked() string {
	if o == nil || o.LastChecked.Get() == nil {
		var ret string
		return ret
	}

	return *o.LastChecked.Get()
}

// GetLastCheckedOk returns a tuple with the LastChecked field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EsiTokenData) GetLastCheckedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastChecked.Get(), o.LastChecked.IsSet()
}

// SetLastChecked sets field value
func (o *EsiTokenData) SetLastChecked(v string) {
	o.LastChecked.Set(&v)
}

// GetCharacterId returns the CharacterId field value
func (o *EsiTokenData) GetCharacterId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CharacterId
}

// GetCharacterIdOk returns a tuple with the CharacterId field value
// and a boolean to check if the value has been set.
func (o *EsiTokenData) GetCharacterIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CharacterId, true
}

// SetCharacterId sets field value
func (o *EsiTokenData) SetCharacterId(v int32) {
	o.CharacterId = v
}

// GetCharacterName returns the CharacterName field value
func (o *EsiTokenData) GetCharacterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CharacterName
}

// GetCharacterNameOk returns a tuple with the CharacterName field value
// and a boolean to check if the value has been set.
func (o *EsiTokenData) GetCharacterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CharacterName, true
}

// SetCharacterName sets field value
func (o *EsiTokenData) SetCharacterName(v string) {
	o.CharacterName = v
}

// GetCorporationId returns the CorporationId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *EsiTokenData) GetCorporationId() int32 {
	if o == nil || o.CorporationId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.CorporationId.Get()
}

// GetCorporationIdOk returns a tuple with the CorporationId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EsiTokenData) GetCorporationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CorporationId.Get(), o.CorporationId.IsSet()
}

// SetCorporationId sets field value
func (o *EsiTokenData) SetCorporationId(v int32) {
	o.CorporationId.Set(&v)
}

// GetAllianceId returns the AllianceId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *EsiTokenData) GetAllianceId() int32 {
	if o == nil || o.AllianceId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.AllianceId.Get()
}

// GetAllianceIdOk returns a tuple with the AllianceId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EsiTokenData) GetAllianceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllianceId.Get(), o.AllianceId.IsSet()
}

// SetAllianceId sets field value
func (o *EsiTokenData) SetAllianceId(v int32) {
	o.AllianceId.Set(&v)
}

func (o EsiTokenData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EsiTokenData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lastChecked"] = o.LastChecked.Get()
	toSerialize["characterId"] = o.CharacterId
	toSerialize["characterName"] = o.CharacterName
	toSerialize["corporationId"] = o.CorporationId.Get()
	toSerialize["allianceId"] = o.AllianceId.Get()
	return toSerialize, nil
}

type NullableEsiTokenData struct {
	value *EsiTokenData
	isSet bool
}

func (v NullableEsiTokenData) Get() *EsiTokenData {
	return v.value
}

func (v *NullableEsiTokenData) Set(val *EsiTokenData) {
	v.value = val
	v.isSet = true
}

func (v NullableEsiTokenData) IsSet() bool {
	return v.isSet
}

func (v *NullableEsiTokenData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEsiTokenData(val *EsiTokenData) *NullableEsiTokenData {
	return &NullableEsiTokenData{value: val, isSet: true}
}

func (v NullableEsiTokenData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEsiTokenData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


